int mySqrt(int x) {
    // Handle small values directly
    if (x == 0 || x == 1)
        return x;

    int low = 1, high = x, ans = 0;

    while (low <= high) {
        int mid = low + (high - low) / 2;

        // To avoid overflow, cast to long long for multiplication
        long long square = (long long)mid * mid;

        if (square == x) {
            return mid; // Exact square root
        } else if (square < x) {
            ans = mid;     // mid is a candidate
            low = mid + 1; // Try higher
        } else {
            high = mid - 1; // Try lower
        }
    }

    return ans; // Closest integer square root (rounded down)
}
